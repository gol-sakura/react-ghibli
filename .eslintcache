[{"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\index.js":"1","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\App.js":"2","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Nav\\Navbar.jsx":"4","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\LandingPage\\Landingpage.jsx":"5","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Footer\\Footer.jsx":"6","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Movies\\MovieList.jsx":"7","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Services\\MovieService.js":"8","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\http-common.js":"9","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Movies\\AllMoviesDB.jsx":"10","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Movies\\CreateMovie.jsx":"11","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Movies\\UpdateMovie.jsx":"12"},{"size":646,"mtime":1610988012629,"results":"13","hashOfConfig":"14"},{"size":1065,"mtime":1610971186611,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":2042,"mtime":1610984868273,"results":"17","hashOfConfig":"14"},{"size":1661,"mtime":1611075536195,"results":"18","hashOfConfig":"14"},{"size":519,"mtime":1611074347310,"results":"19","hashOfConfig":"14"},{"size":3327,"mtime":1611826281220,"results":"20","hashOfConfig":"14"},{"size":693,"mtime":1610980254148,"results":"21","hashOfConfig":"14"},{"size":176,"mtime":1610730984668,"results":"22","hashOfConfig":"14"},{"size":4161,"mtime":1611074882122,"results":"23","hashOfConfig":"14"},{"size":5445,"mtime":1611074424088,"results":"24","hashOfConfig":"14"},{"size":7923,"mtime":1611063879501,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1rntc4h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\index.js",[],["54","55"],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\App.js",[],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Nav\\Navbar.jsx",[],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\LandingPage\\Landingpage.jsx",[],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Footer\\Footer.jsx",[],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Movies\\MovieList.jsx",["56","57","58"],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Services\\MovieService.js",["59"],"import http from '../http-common';\r\n\r\n\r\nconst GetAll = () => {\r\n    return http.get('/Film');\r\n}\r\nconst GetFilmById = (id) => {\r\n    return http.get(`/Film/${id}`);\r\n}\r\n// data from Database \r\nconst GetAllMoviesFromDB = () => {\r\n    return http.get('/Movie');\r\n}\r\nconst GetMovieById = id => {\r\n    return http.get(`/Movie/${id}`);\r\n}\r\nconst Create = data => {\r\n    return http.post('/Movie', data);\r\n}\r\n\r\nconst Update = (id, data) => {\r\n    return http.put(`/Movie/${id}`, data)\r\n}\r\n\r\nconst Delete = (id) => {\r\n    return http.delete(`/Movie/${id}`);\r\n}\r\n\r\nexport default {\r\n    GetAll,\r\n    GetFilmById,\r\n    GetAllMoviesFromDB,\r\n    GetMovieById,\r\n    Create,\r\n    Update,\r\n    Delete\r\n\r\n\r\n}","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\http-common.js",[],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Movies\\AllMoviesDB.jsx",["60","61","62","63","64","65","66"],"import React, { useState, useEffect } from \"react\";\r\nimport MovieService from \"../../Services/MovieService\";\r\nimport \"./AllMoviesDB.css\";\r\nimport {\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBBadge,\r\n  MDBBtn,\r\n  MDBCardHeader,\r\n  MDBCard,\r\n  MDBCardFooter,\r\n  MDBIcon,\r\n  MDBCardBody,\r\n  MDBLink,\r\n  MDBCardImage,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBCol,\r\n  MDBCardGroup,\r\n} from \"mdbreact\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AllMoviesDB = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [currentMovie, setCurrentMovie] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    retriveMovies();\r\n  }, []);\r\n\r\n  const retriveMovies = () => {\r\n    MovieService.GetAllMoviesFromDB()\r\n      .then((response) => {\r\n        setMovies(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retriveMovies();\r\n    setCurrentMovie(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveMovie = (movie, index) => {\r\n    setCurrentMovie(movie);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  const removeMovie = () => {\r\n    MovieService.Delete()\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"hello\">\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <MDBContainer>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        {movies &&\r\n          movies.map((movie, index) => (\r\n            <MDBCol style={{ maxWidth: \"100rem\" }} size=\"12\" lg=\"3\" md=\"6\" className=\"mb-lg-0 mb-4\">\r\n              <MDBCard\r\n                className={\r\n                  \"card-group-item \" + (index === currentIndex ? \"active\" : \" \")\r\n                }\r\n                onClick={() => setActiveMovie(movie, index)}\r\n                key={index}\r\n              >\r\n                <MDBCardImage\r\n                  alt=\"fluid\"\r\n                  className=\"img-fluid\"\r\n                  src=\"https://images.hdqwalls.com/wallpapers/anime-city-hd-zt.jpg\"\r\n                  waves\r\n                />\r\n                <MDBCardBody>\r\n                  <MDBCardTitle style={{ color: \"black\" }}>\r\n                    {movie.title}\r\n                  </MDBCardTitle>\r\n                  <MDBBadge color=\"grey darken-3\">Release Date</MDBBadge>{\" \"}\r\n                  <MDBBadge tag=\"a\" color=\"morpheus-den-gradient\">\r\n                    {\" \"}\r\n                    {movie.release_Date}{\" \"}\r\n                  </MDBBadge>\r\n                  <MDBCardText>{movie.description}</MDBCardText>\r\n                  <MDBCardText>\r\n                    <MDBBadge color=\"grey darken-3\">Director</MDBBadge>{\" \"}\r\n                    <MDBBadge tag=\"a\" color=\"purple lighten-1\">\r\n                      {\" \"}\r\n                      {movie.director}\r\n                    </MDBBadge>\r\n                  </MDBCardText>\r\n                  <MDBCardText>\r\n                    <MDBBadge color=\"grey darken-3\">Producer</MDBBadge>{\" \"}\r\n                    <MDBBadge tag=\"a\" color=\"tempting-azure-gradient\">\r\n                      {\" \"}\r\n                      {movie.producer}\r\n                    </MDBBadge>\r\n                  </MDBCardText>\r\n                  <Link\r\n                    to={[\"/updatemovie/\"] + movie.id}\r\n                    className=\"btn  sunny-morning-gradient\"\r\n                  >\r\n                    Edit\r\n                  </Link>\r\n                </MDBCardBody>\r\n                <MDBCardFooter\r\n                  color=\"#616161 grey darken-2\"\r\n                  className=\"white-text mdb-color three\"\r\n                >\r\n                  <MDBBadge color=\"grey darken-3\">\r\n                    {\" \"}\r\n                    <MDBIcon icon=\"star\"></MDBIcon> Rate\r\n                  </MDBBadge>{\" \"}\r\n                  {movie.rate_Score}\r\n                </MDBCardFooter>\r\n              </MDBCard>\r\n              <br />\r\n              <br />\r\n              <br />\r\n            </MDBCol>\r\n          ))}\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllMoviesDB;\r\n","C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Movies\\CreateMovie.jsx",[],"C:\\Users\\golsa\\OneDrive\\Dokument\\my-app\\src\\Components\\Movies\\UpdateMovie.jsx",["67"],"import React, { useState, useEffect } from 'react';\r\nimport MovieService from \"../../Services/MovieService\";\r\nimport './UpdateMovie.css';\r\nimport { MDBContainer, MDBRow,MDBCardBody,  MDBCardHeader,MDBCard,MDBCardTitle, MDBCol, MDBBtn, MDBIcon, MDBInput } from 'mdbreact';\r\n\r\n\r\nconst UpdateMovie = (props) => {\r\n    const initialMovieState = {\r\n        id: '',\r\n        title: '',\r\n        description: '',\r\n        director: '',\r\n        producer: '',\r\n        release_Date: '',\r\n        rate_Score: ''\r\n\r\n    };\r\n\r\n    const [currentMovie, setCurrentMovie] = useState(initialMovieState);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [submitted, setSubmitted] = useState(false);\r\n\r\n\r\n    const getMovie = id => {\r\n        MovieService.GetMovieById(id)\r\n            .then(response => {\r\n                setCurrentMovie(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMovie(props.match.params.id);\r\n\r\n    }, [props.match.params.id]);\r\n\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        setCurrentMovie({ ...currentMovie, [name]: value });\r\n    };\r\n\r\n\r\n    const updatePublished = status => {\r\n        var data = {\r\n            id: currentMovie.id,\r\n            title: currentMovie.title,\r\n            director: currentMovie.director,\r\n            producer: currentMovie.producer,\r\n            description: currentMovie.description,\r\n            release_Date: currentMovie.release_Date,\r\n            rate_Score: currentMovie.rate_Score\r\n           \r\n        };\r\n\r\n        MovieService.Update(currentMovie.id, data)\r\n            .then(response => {\r\n                setCurrentMovie({ ...currentMovie});\r\n                console.log(response.data);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    const UpdateMovie = () => {\r\n        MovieService.Update(currentMovie.id, currentMovie)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setMessage(\"Movie updated successfully!\");\r\n                setSubmitted(true);\r\n            })\r\n\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n    const DeleteMovie = () => {\r\n        MovieService.Delete(currentMovie.id)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                props.history.push(\"/allmoviesdb\");\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    return (\r\n\r\n        <div className=\"one\">\r\n            <MDBContainer>\r\n                <MDBCardHeader className=\"form-header deep-blue-gradient rounded\">\r\n                    <h3 className=\"my-3\">\r\n                        <MDBIcon icon=\"marker\" /> Edit A Movie\r\n                </h3>\r\n                </MDBCardHeader>\r\n                  {submitted ? (\r\n                    <MDBContainer>\r\n                    <div className=\"text-center koko\" >\r\n                        <MDBCard  style={{border: \"2px\" }}> \r\n                        <MDBCardBody>\r\n                            <br />\r\n                            <br />\r\n                            <MDBCardTitle className=\"text-lg-center\" style={{color: \"black\" }}> <strong>{message}</strong></MDBCardTitle>\r\n                            <br />\r\n                            <br />\r\n                            <MDBBtn\r\n                                href=\"/allmoviesdb\"\r\n                                color=\"secondary\"\r\n                                className=\"btn btn-warning btn-lg\">\r\n                                Back to Films \r\n                            </MDBBtn>\r\n                         </MDBCardBody>\r\n                         </MDBCard>\r\n                    </div>\r\n                    </MDBContainer>\r\n                ) : (\r\n                    \r\n                <MDBRow>\r\n                    <MDBCol md=\"12\">\r\n                        <form className=\"container\">\r\n                            <br />\r\n                            <div>\r\n                                {currentMovie ? (\r\n                                    <div className=\"edit-form\">\r\n\r\n                                        <div className=\"black-text\">\r\n                                            <MDBInput label=\"Title\" name=\"title\" group type=\"text\" validate error=\"wrong\"\r\n                                                success=\"right\" value={currentMovie.title}\r\n                                                onChange={handleInputChange} />\r\n                                            <MDBInput label=\"Director\" group name=\"director\" type=\"text\" validate error=\"wrong\"\r\n                                                success=\"right\" value={currentMovie.director}\r\n                                                onChange={handleInputChange} />\r\n                                            <MDBInput label=\"Producer\" group name=\"producer\" type=\"text\" validate error=\"wrong\" success=\"right\" value={currentMovie.producer}\r\n                                                onChange={handleInputChange} />\r\n\r\n                                            <MDBInput label=\"Release Date\" group name=\"release_Date\" type=\"text\" validate error=\"wrong\"\r\n                                                success=\"right\" value={currentMovie.release_Date}\r\n                                                onChange={handleInputChange} />\r\n                                            <MDBInput label=\"Rate Score\" group name=\"rate_Score\" type=\"text\" validate error=\"wrong\"\r\n                                                success=\"right\" value={currentMovie.rate_Score}\r\n                                                onChange={handleInputChange} />\r\n                                            <MDBInput type=\"textarea\" rows=\"3\" name=\"description\" label=\"Description\" validate error=\"wrong\"\r\n                                                success=\"right\" value={currentMovie.description}\r\n                                                onChange={handleInputChange} />\r\n                                            <br />                    \r\n                                        <MDBBtn size=\"lg\" gradient=\"peach\"  onClick={UpdateMovie}>\r\n                                            Update\r\n                                <MDBIcon far icon=\"edit\" className=\"ml-1\" />\r\n                                        </MDBBtn>\r\n                                        <MDBBtn size=\"lg\" className=\"young-passion-gradient\"  onClick={DeleteMovie} >\r\n                                            Delete\r\n                                <MDBIcon far icon=\"trash-alt\" className=\"ml-1\" />\r\n                                        </MDBBtn>\r\n\r\n                                        <MDBBtn\r\n                                        size='lg'\r\n                                        gradient=\"blue\"\r\n                                            color=\"blue\"\r\n                                            href='/allmoviesdb'><MDBIcon icon=\"arrow-circle-left\" /> Back To Movie List</MDBBtn>\r\n                                        <p>{message}</p>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                ) : (\r\n                                        <div>\r\n                                            <br />\r\n                                            <p>Click Movie...</p>\r\n                                        </div>\r\n                                    )}\r\n                            </div>\r\n                       \r\n                        </form>\r\n                    </MDBCol>                  \r\n                </MDBRow>\r\n                )}\r\n            </MDBContainer>\r\n           \r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default UpdateMovie;",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":3,"nodeType":"74","messageId":"75","endLine":3,"endColumn":15},{"ruleId":"72","severity":1,"message":"76","line":4,"column":3,"nodeType":"74","messageId":"75","endLine":4,"endColumn":13},{"ruleId":"72","severity":1,"message":"77","line":8,"column":3,"nodeType":"74","messageId":"75","endLine":8,"endColumn":9},{"ruleId":"78","severity":1,"message":"79","line":29,"column":1,"nodeType":"80","endLine":39,"endColumn":2},{"ruleId":"72","severity":1,"message":"81","line":6,"column":3,"nodeType":"74","messageId":"75","endLine":6,"endColumn":9},{"ruleId":"72","severity":1,"message":"77","line":8,"column":3,"nodeType":"74","messageId":"75","endLine":8,"endColumn":9},{"ruleId":"72","severity":1,"message":"82","line":9,"column":3,"nodeType":"74","messageId":"75","endLine":9,"endColumn":16},{"ruleId":"72","severity":1,"message":"83","line":14,"column":3,"nodeType":"74","messageId":"75","endLine":14,"endColumn":10},{"ruleId":"72","severity":1,"message":"84","line":19,"column":3,"nodeType":"74","messageId":"75","endLine":19,"endColumn":15},{"ruleId":"72","severity":1,"message":"85","line":25,"column":10,"nodeType":"74","messageId":"75","endLine":25,"endColumn":22},{"ruleId":"72","severity":1,"message":"86","line":54,"column":9,"nodeType":"74","messageId":"75","endLine":54,"endColumn":20},{"ruleId":"72","severity":1,"message":"87","line":47,"column":11,"nodeType":"74","messageId":"75","endLine":47,"endColumn":26},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'MDBContainer' is defined but never used.","Identifier","unusedVar","'MDBTooltip' is defined but never used.","'MDBBtn' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'MDBRow' is defined but never used.","'MDBCardHeader' is defined but never used.","'MDBLink' is defined but never used.","'MDBCardGroup' is defined but never used.","'currentMovie' is assigned a value but never used.","'removeMovie' is assigned a value but never used.","'updatePublished' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]